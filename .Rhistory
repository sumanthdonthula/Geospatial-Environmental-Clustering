# create a list of selected states with ranks
plotD$State[plotD$State == "DAMAN AND DIU, DADRA AND NAGAR HAVELI"] = "DAMAN AND DIU"
selected_states = str_to_title(plotD$State)
ranks = plotD$Rank
state_ranks = data.frame(state = selected_states, rank = ranks)
# read in the shapefile data for Indian states
india = st_read("C:/Users/SRINU/Desktop/DPA Project/IND_adm1.shp")
# join the state rank data with the shapefile data
india_ranks = merge(india, state_ranks, by.x = "NAME_1", by.y = "state")
# manually specify the colors for each rank
colors = c("#8BC34A", "#FFEB3B", "#9C27B0", "#673AB7","#FF9800", "#F44336")
names(colors) = c("A", "B", "C", "D", "E", "F")
states <- india %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(state = india$NAME_1)
ggplot(data = india_ranks) +
geom_sf(aes(fill = factor(rank))) +
scale_fill_manual(values = colors) +
theme_void() +
geom_text(data = states, aes(x = X, y = Y, label = state), size = 2, color = "black",text = element_text(family = "Roboto Condensed", size = 2)) +
labs(title = "State-wise Rankings of Water and Air Quality in India 2021")
library(stringr)
library(ggplot2)
library(sf)
ploDWater = Water2021
# create a list of selected states with ranks
ploDWater$State[ploDWater$State == "DAMAN AND DIU, DADRA AND NAGAR HAVELI"] = "DAMAN AND DIU"
selected_states = str_to_title(ploDWater$State)
ranks = ploDWater$Rank
state_ranks = data.frame(state = selected_states, rank = ranks)
# read in the shapefile data for Indian states
india = st_read("C:/Users/SRINU/Desktop/DPA Project/IND_adm1.shp")
# join the state rank data with the shapefile data
india_ranks = merge(india, state_ranks, by.x = "NAME_1", by.y = "state")
# manually specify the colors for each rank
colors = c("#8BC34A", "#FFEB3B", "#9C27B0", "#673AB7","#FF9800", "#F44336")
names(colors) = c("A", "B", "C", "D", "E", "F")
states <- india %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(state = india$NAME_1)
ggplot(data = india_ranks) +
geom_sf(aes(fill = factor(rank))) +
scale_fill_manual(values = colors) +
theme_void() +
geom_text(data = states, aes(x = X, y = Y, label = state), size = 2, color = "black",text = element_text(family = "Roboto Condensed", size = 2)) +
labs(title = "State-wise Rankings of Water Quality in India 2021")
library(stringr)
library(ggplot2)
library(sf)
ploDWater = Water2017
# create a list of selected states with ranks
ploDWater$State[ploDWater$State == "DAMAN AND DIU, DADRA AND NAGAR HAVELI"] = "DAMAN AND DIU"
selected_states = str_to_title(ploDWater$State)
ranks = ploDWater$Rank
state_ranks = data.frame(state = selected_states, rank = ranks)
# read in the shapefile data for Indian states
india = st_read("C:/Users/SRINU/Desktop/DPA Project/IND_adm1.shp")
# join the state rank data with the shapefile data
india_ranks = merge(india, state_ranks, by.x = "NAME_1", by.y = "state")
# manually specify the colors for each rank
colors = c("#8BC34A", "#FFEB3B", "#9C27B0", "#673AB7","#FF9800", "#F44336")
names(colors) = c("A", "B", "C", "D", "E", "F")
states <- india %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(state = india$NAME_1)
ggplot(data = india_ranks) +
geom_sf(aes(fill = factor(rank))) +
scale_fill_manual(values = colors) +
theme_void() +
geom_text(data = states, aes(x = X, y = Y, label = state), size = 2, color = "black",text = element_text(family = "Roboto Condensed", size = 2)) +
labs(title = "State-wise Rankings of Water Quality in India 2017")
AirQualityDataFrame
colnames(AirQualityDataFrame)
View(AirQualityDataFrame)
agg_AirQualityDataFrames
View(agg_AirQualityDataFrames)
state_ranks = data.frame(state = selected_states, rank = ranks)
library(stringr)
library(ggplot2)
library(sf)
plotD = WaterAir2017
# create a list of selected states with ranks
plotD$State[plotD$State == "DAMAN AND DIU, DADRA AND NAGAR HAVELI"] = "DAMAN AND DIU"
selected_states = str_to_title(plotD$State)
ranks = plotD$Rank
state_ranks = data.frame(state = selected_states, rank = ranks)
# read in the shapefile data for Indian states
india = st_read("C:/Users/SRINU/Desktop/DPA Project/IND_adm1.shp")
# join the state rank data with the shapefile data
india_ranks = merge(india, state_ranks, by.x = "NAME_1", by.y = "state")
# manually specify the colors for each rank
colors = c("#8BC34A", "#FFEB3B", "#9C27B0", "#673AB7","#FF9800", "#F44336")
names(colors) = c("A", "B", "C", "D", "E", "F")
states <- india %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(state = india$NAME_1)
ggplot(data = india_ranks) +
geom_sf(aes(fill = factor(rank))) +
scale_fill_manual(values = colors) +
theme_void() +
geom_text(data = states, aes(x = X, y = Y, label = state), size = 2, color = "black",text = element_text(family = "Roboto Condensed", size = 2)) +
labs(title = "State-wise Rankings of Water and Air Quality in India 2017")
library(stringr)
library(ggplot2)
library(sf)
ploDWater = Water2017
# create a list of selected states with ranks
ploDWater$State[ploDWater$State == "DAMAN AND DIU, DADRA AND NAGAR HAVELI"] = "DAMAN AND DIU"
selected_states = str_to_title(ploDWater$State)
ranks = ploDWater$Rank
state_ranks = data.frame(state = selected_states, rank = ranks)
# read in the shapefile data for Indian states
india = st_read("C:/Users/SRINU/Desktop/DPA Project/IND_adm1.shp")
# join the state rank data with the shapefile data
india_ranks = merge(india, state_ranks, by.x = "NAME_1", by.y = "state")
# manually specify the colors for each rank
colors = c("#8BC34A", "#FFEB3B", "#9C27B0", "#673AB7","#FF9800", "#F44336")
names(colors) = c("A", "B", "C", "D", "E", "F")
states <- india %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(state = india$NAME_1)
ggplot(data = india_ranks) +
geom_sf(aes(fill = factor(rank))) +
scale_fill_manual(values = colors) +
theme_void() +
geom_text(data = states, aes(x = X, y = Y, label = state), size = 2, color = "black",text = element_text(family = "Roboto Condensed", size = 2)) +
labs(title = "State-wise Rankings of Water Quality in India 2017")
WaterQualityAlone = waterQuality_2017_Avg[, c("TemperatureAvg"
,"DissolvedO2Avg"
,"pHAvg"
,"ConductivityAvg"
,"BODAvg"
,"FecalColiformAvg"
,"NitrateAvg"
,"TotalColiformAvg"
)]
# Center and scale the data
WaterQualityAlone_scaled = scale(WaterQualityAlone)
# Perform PCA
pca_result = princomp(WaterQualityAlone_scaled, center = TRUE, scale. = TRUE)
# Print the summary of PCA results
summary(pca_result)
#reverse the signs
pca_result$rotation = -1*pca_result$rotation
#display principal components
pca_result$rotation
var_explained = pca_result$sdev^2 / sum(pca_result$sdev^2)
print(var_explained)
pc.comp = pca_result$scores
#87%
pc.comp1 = -1*pc.comp[,1]
pc.comp2 = -1*pc.comp[,2]
pc.comp3 = -1*pc.comp[,3]
pc.comp4 = -1*pc.comp[,4]
pc.comp5= -1*pc.comp[,5]
pc.comp6 = -1*pc.comp[,6]
library(factoextra)
library(tidyr)
library(ggplot2)
X = cbind(pc.comp1, pc.comp2,pc.comp3, pc.comp4,pc.comp5,pc.comp6)
X
k =6
kmeans_model = kmeans(X, centers = k,nstart=1)
waterQuality_2017_Avg$cluster=kmeans_model$cluster
fviz_cluster(kmeans_model, data = X)
mean_by_group = aggregate(cbind(TemperatureAvg, DissolvedO2Avg, pHAvg,ConductivityAvg,BODAvg,NitrateAvg,FecalColiformAvg,TotalColiformAvg) ~ cluster, data = waterQuality_2017_Avg, mean)
table(waterQuality_2017_Avg$State,waterQuality_2017_Avg$cluster)
WaterQualityAlone
Result_2017_water= mean_by_group[order(mean_by_group$TotalColiformAvg, mean_by_group$BODAvg, mean_by_group$DissolvedO2Avg,mean_by_group$FecalColiformAvg), ]
Result_2017_water$Rank=c("A", "B", "C", "D", "E","F")
Water2017 = merge(waterQuality_2017_Avg, Result_2017_water[,c("cluster","Rank")], by = "cluster", all.x = TRUE)
pca_data = waterQuality_2017_Avg[, c("TemperatureAvg"
,"DissolvedO2Avg"
,"pHAvg"
,"ConductivityAvg"
,"BODAvg"
,"FecalColiformAvg"
,"NitrateAvg"
,"TotalColiformAvg"
,"NO2"
,"PM10"
,"SO2"
,"PM2.5")]
# Center and scale the data
pca_data_scaled = scale(pca_data)
# Perform PCA
pca_result = princomp(pca_data_scaled, center = TRUE, scale. = TRUE)
# Print the summary of PCA results
summary(pca_result)
#reverse the signs
pca_result$rotation = -1*pca_result$rotation
#display principal components
pca_result$rotation
var_explained = pca_result$sdev^2 / sum(pca_result$sdev^2)
print(var_explained)
pc.comp = pca_result$scores
#84%
pc.comp1 = -1*pc.comp[,1]
pc.comp2 = -1*pc.comp[,2]
pc.comp3 = -1*pc.comp[,3]
pc.comp4 = -1*pc.comp[,4]
pc.comp5= -1*pc.comp[,5]
pca_data = waterQuality_2017_Avg[, c("TemperatureAvg"
,"DissolvedO2Avg"
,"pHAvg"
,"ConductivityAvg"
,"BODAvg"
,"FecalColiformAvg"
,"NitrateAvg"
,"TotalColiformAvg"
,"NO2"
,"PM10"
,"SO2"
,"PM2.5")]
# Center and scale the data
pca_data_scaled = scale(pca_data)
# Perform PCA
pca_result = princomp(pca_data_scaled, center = TRUE, scale. = TRUE)
# Print the summary of PCA results
summary(pca_result)
#reverse the signs
pca_result$rotation = -1*pca_result$rotation
#display principal components
pca_result$rotation
var_explained = pca_result$sdev^2 / sum(pca_result$sdev^2)
print(var_explained)
pc.comp = pca_result$scores
#84%
pc.comp1 = -1*pc.comp[,1]
pc.comp2 = -1*pc.comp[,2]
pc.comp3 = -1*pc.comp[,3]
pc.comp4 = -1*pc.comp[,4]
pc.comp5= -1*pc.comp[,5]
pc.comp6=-1*pc.comp[,6]
library(factoextra)
library(tidyr)
library(ggplot2)
X = cbind(pc.comp1, pc.comp2,pc.comp3, pc.comp4,pc.comp5,pc.comp6)
X
k =6
kmeans_model = kmeans(X, centers = k,nstart=1)
waterQuality_2017_Avg$cluster=kmeans_model$cluster
fviz_cluster(kmeans_model, data = X)
mean_by_group = aggregate(cbind(TemperatureAvg, DissolvedO2Avg, pHAvg,ConductivityAvg,BODAvg,NitrateAvg,FecalColiformAvg,TotalColiformAvg,NO2,PM10,SO2,PM2.5) ~ cluster, data = waterQuality_2017_Avg, mean)
table(waterQuality_2017_Avg$State,waterQuality_2017_Avg$cluster)
waterQuality_2017_Avg
Result_2017= mean_by_group[order(mean_by_group$TotalColiformAvg, mean_by_group$BODAvg, mean_by_group$DissolvedO2Avg,mean_by_group$NO2,mean_by_group$FecalColiformAvg,mean_by_group$PM10,mean_by_group$SO2,mean_by_group$PM2.5), ]
Result_2017$Rank=c("A", "B", "C", "D", "E","F")
class(Result_2017$cluster)
class(waterQuality_2017_Avg$cluster)
WaterAir2017 = merge(waterQuality_2017_Avg, Result_2017[,c("cluster","Rank")], by = "cluster", all.x = TRUE)
library(stringr)
library(ggplot2)
library(sf)
plotD = WaterAir2017
# create a list of selected states with ranks
plotD$State[plotD$State == "DAMAN AND DIU, DADRA AND NAGAR HAVELI"] = "DAMAN AND DIU"
selected_states = str_to_title(plotD$State)
ranks = plotD$Rank
state_ranks = data.frame(state = selected_states, rank = ranks)
# read in the shapefile data for Indian states
india = st_read("C:/Users/SRINU/Desktop/DPA Project/IND_adm1.shp")
# join the state rank data with the shapefile data
india_ranks = merge(india, state_ranks, by.x = "NAME_1", by.y = "state")
# manually specify the colors for each rank
colors = c("#8BC34A", "#FFEB3B", "#9C27B0", "#673AB7","#FF9800", "#F44336")
names(colors) = c("A", "B", "C", "D", "E", "F")
states <- india %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(state = india$NAME_1)
ggplot(data = india_ranks) +
geom_sf(aes(fill = factor(rank))) +
scale_fill_manual(values = colors) +
theme_void() +
geom_text(data = states, aes(x = X, y = Y, label = state), size = 2, color = "black",text = element_text(family = "Roboto Condensed", size = 2)) +
labs(title = "State-wise Rankings of Water and Air Quality in India 2017")
library(stringr)
library(ggplot2)
library(sf)
ploDWater = Water2017
# create a list of selected states with ranks
ploDWater$State[ploDWater$State == "DAMAN AND DIU, DADRA AND NAGAR HAVELI"] = "DAMAN AND DIU"
selected_states = str_to_title(ploDWater$State)
ranks = ploDWater$Rank
state_ranks = data.frame(state = selected_states, rank = ranks)
# read in the shapefile data for Indian states
india = st_read("C:/Users/SRINU/Desktop/DPA Project/IND_adm1.shp")
# join the state rank data with the shapefile data
india_ranks = merge(india, state_ranks, by.x = "NAME_1", by.y = "state")
# manually specify the colors for each rank
colors = c("#8BC34A", "#FFEB3B", "#9C27B0", "#673AB7","#FF9800", "#F44336")
names(colors) = c("A", "B", "C", "D", "E", "F")
states <- india %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(state = india$NAME_1)
ggplot(data = india_ranks) +
geom_sf(aes(fill = factor(rank))) +
scale_fill_manual(values = colors) +
theme_void() +
geom_text(data = states, aes(x = X, y = Y, label = state), size = 2, color = "black",text = element_text(family = "Roboto Condensed", size = 2)) +
labs(title = "State-wise Rankings of Water Quality in India 2017")
WaterQualityAlone = waterQuality_2017_Avg[, c("TemperatureAvg"
,"DissolvedO2Avg"
,"pHAvg"
,"ConductivityAvg"
,"BODAvg"
,"FecalColiformAvg"
,"NitrateAvg"
,"TotalColiformAvg"
)]
# Center and scale the data
WaterQualityAlone_scaled = scale(WaterQualityAlone)
# Perform PCA
pca_result = princomp(WaterQualityAlone_scaled, center = TRUE, scale. = TRUE)
# Print the summary of PCA results
summary(pca_result)
#reverse the signs
pca_result$rotation = -1*pca_result$rotation
#display principal components
pca_result$rotation
var_explained = pca_result$sdev^2 / sum(pca_result$sdev^2)
print(var_explained)
pc.comp = pca_result$scores
#87%
pc.comp1 = -1*pc.comp[,1]
pc.comp2 = -1*pc.comp[,2]
pc.comp3 = -1*pc.comp[,3]
pc.comp4 = -1*pc.comp[,4]
pc.comp5= -1*pc.comp[,5]
pc.comp6 = -1*pc.comp[,6]
library(factoextra)
library(tidyr)
library(ggplot2)
X = cbind(pc.comp1, pc.comp2,pc.comp3, pc.comp4,pc.comp5,pc.comp6)
X
k =6
kmeans_model = kmeans(X, centers = k,nstart=1)
waterQuality_2017_Avg$cluster=kmeans_model$cluster
fviz_cluster(kmeans_model, data = X)
mean_by_group = aggregate(cbind(TemperatureAvg, DissolvedO2Avg, pHAvg,ConductivityAvg,BODAvg,NitrateAvg,FecalColiformAvg,TotalColiformAvg) ~ cluster, data = waterQuality_2017_Avg, mean)
table(waterQuality_2017_Avg$State,waterQuality_2017_Avg$cluster)
WaterQualityAlone
Result_2017_water= mean_by_group[order(mean_by_group$TotalColiformAvg, mean_by_group$BODAvg, mean_by_group$DissolvedO2Avg,mean_by_group$FecalColiformAvg), ]
Result_2017_water$Rank=c("A", "B", "C", "D", "E","F")
Water2017 = merge(waterQuality_2017_Avg, Result_2017_water[,c("cluster","Rank")], by = "cluster", all.x = TRUE)
print(var_explained)
WaterQualityAlone = waterQuality_2017_Avg[, c("TemperatureAvg"
,"DissolvedO2Avg"
,"pHAvg"
,"ConductivityAvg"
,"BODAvg"
,"FecalColiformAvg"
,"NitrateAvg"
,"TotalColiformAvg"
)]
# Center and scale the data
WaterQualityAlone_scaled = scale(WaterQualityAlone)
# Perform PCA
pca_result = princomp(WaterQualityAlone_scaled, center = TRUE, scale. = TRUE)
# Print the summary of PCA results
summary(pca_result)
#reverse the signs
pca_result$rotation = -1*pca_result$rotation
#display principal components
pca_result$rotation
var_explained = pca_result$sdev^2 / sum(pca_result$sdev^2)
print(var_explained)
pc.comp = pca_result$scores
#87%
pc.comp1 = -1*pc.comp[,1]
pc.comp2 = -1*pc.comp[,2]
pc.comp3 = -1*pc.comp[,3]
pc.comp4 = -1*pc.comp[,4]
pc.comp5= -1*pc.comp[,5]
pc.comp6 = -1*pc.comp[,6]
pc.comp7=-1*pc.comp[,7]
library(factoextra)
library(tidyr)
library(ggplot2)
X = cbind(pc.comp1, pc.comp2,pc.comp3, pc.comp4,pc.comp5,pc.comp6,pc.comp7)
X
k =6
kmeans_model = kmeans(X, centers = k,nstart=1)
waterQuality_2017_Avg$cluster=kmeans_model$cluster
fviz_cluster(kmeans_model, data = X)
mean_by_group = aggregate(cbind(TemperatureAvg, DissolvedO2Avg, pHAvg,ConductivityAvg,BODAvg,NitrateAvg,FecalColiformAvg,TotalColiformAvg) ~ cluster, data = waterQuality_2017_Avg, mean)
table(waterQuality_2017_Avg$State,waterQuality_2017_Avg$cluster)
WaterQualityAlone
Result_2017_water= mean_by_group[order(mean_by_group$TotalColiformAvg, mean_by_group$BODAvg, mean_by_group$DissolvedO2Avg,mean_by_group$FecalColiformAvg), ]
Result_2017_water$Rank=c("A", "B", "C", "D", "E","F")
Water2017 = merge(waterQuality_2017_Avg, Result_2017_water[,c("cluster","Rank")], by = "cluster", all.x = TRUE)
library(stringr)
library(ggplot2)
library(sf)
plotD = WaterAir2017
# create a list of selected states with ranks
plotD$State[plotD$State == "DAMAN AND DIU, DADRA AND NAGAR HAVELI"] = "DAMAN AND DIU"
selected_states = str_to_title(plotD$State)
ranks = plotD$Rank
state_ranks = data.frame(state = selected_states, rank = ranks)
# read in the shapefile data for Indian states
india = st_read("C:/Users/SRINU/Desktop/DPA Project/IND_adm1.shp")
# join the state rank data with the shapefile data
india_ranks = merge(india, state_ranks, by.x = "NAME_1", by.y = "state")
# manually specify the colors for each rank
colors = c("#8BC34A", "#FFEB3B", "#9C27B0", "#673AB7","#FF9800", "#F44336")
names(colors) = c("A", "B", "C", "D", "E", "F")
states <- india %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(state = india$NAME_1)
ggplot(data = india_ranks) +
geom_sf(aes(fill = factor(rank))) +
scale_fill_manual(values = colors) +
theme_void() +
geom_text(data = states, aes(x = X, y = Y, label = state), size = 2, color = "black",text = element_text(family = "Roboto Condensed", size = 2)) +
labs(title = "State-wise Rankings of Water and Air Quality in India 2017")
library(stringr)
library(ggplot2)
library(sf)
ploDWater = Water2017
# create a list of selected states with ranks
ploDWater$State[ploDWater$State == "DAMAN AND DIU, DADRA AND NAGAR HAVELI"] = "DAMAN AND DIU"
selected_states = str_to_title(ploDWater$State)
ranks = ploDWater$Rank
state_ranks = data.frame(state = selected_states, rank = ranks)
# read in the shapefile data for Indian states
india = st_read("C:/Users/SRINU/Desktop/DPA Project/IND_adm1.shp")
# join the state rank data with the shapefile data
india_ranks = merge(india, state_ranks, by.x = "NAME_1", by.y = "state")
# manually specify the colors for each rank
colors = c("#8BC34A", "#FFEB3B", "#9C27B0", "#673AB7","#FF9800", "#F44336")
names(colors) = c("A", "B", "C", "D", "E", "F")
states <- india %>%
st_centroid() %>%
st_coordinates() %>%
as.data.frame() %>%
mutate(state = india$NAME_1)
ggplot(data = india_ranks) +
geom_sf(aes(fill = factor(rank))) +
scale_fill_manual(values = colors) +
theme_void() +
geom_text(data = states, aes(x = X, y = Y, label = state), size = 2, color = "black",text = element_text(family = "Roboto Condensed", size = 2)) +
labs(title = "State-wise Rankings of Water Quality in India 2017")
WaterQualityAlone = waterQuality_2017_Avg[, c("TemperatureAvg"
,"DissolvedO2Avg"
,"pHAvg"
,"ConductivityAvg"
,"BODAvg"
,"FecalColiformAvg"
,"NitrateAvg"
,"TotalColiformAvg"
)]
# Center and scale the data
WaterQualityAlone_scaled = scale(WaterQualityAlone)
# Perform PCA
pca_result = princomp(WaterQualityAlone_scaled, center = TRUE, scale. = TRUE)
# Print the summary of PCA results
summary(pca_result)
#reverse the signs
pca_result$rotation = -1*pca_result$rotation
#display principal components
pca_result$rotation
var_explained = pca_result$sdev^2 / sum(pca_result$sdev^2)
print(var_explained)
pc.comp = pca_result$scores
#87%
pc.comp1 = -1*pc.comp[,1]
pc.comp2 = -1*pc.comp[,2]
pc.comp3 = -1*pc.comp[,3]
pc.comp4 = -1*pc.comp[,4]
pc.comp5= -1*pc.comp[,5]
pc.comp6 = -1*pc.comp[,6]
pc.comp7=-1*pc.comp[,7]
library(factoextra)
library(tidyr)
library(ggplot2)
X = cbind(pc.comp1, pc.comp2,pc.comp3, pc.comp4,pc.comp5,pc.comp6,pc.comp7)
X
k =6
kmeans_model = kmeans(X, centers = k,nstart=1)
waterQuality_2017_Avg$cluster=kmeans_model$cluster
fviz_cluster(kmeans_model, data = X)
mean_by_group = aggregate(cbind(TemperatureAvg, DissolvedO2Avg, pHAvg,ConductivityAvg,BODAvg,NitrateAvg,FecalColiformAvg,TotalColiformAvg) ~ cluster, data = waterQuality_2017_Avg, mean)
table(waterQuality_2017_Avg$State,waterQuality_2017_Avg$cluster)
WaterQualityAlone
Result_2017_water= mean_by_group[order(mean_by_group$TotalColiformAvg, mean_by_group$BODAvg, mean_by_group$DissolvedO2Avg,mean_by_group$FecalColiformAvg), ]
Result_2017_water$Rank=c("A", "B", "C", "D", "E","F")
Water2017 = merge(waterQuality_2017_Avg, Result_2017_water[,c("cluster","Rank")], by = "cluster", all.x = TRUE)
print(var_explained)
# Print the summary of PCA results
summary(pca_result)
#display principal components
pca_result$rotation
pc.comp
print(pc.comp)
print(var_explained)
